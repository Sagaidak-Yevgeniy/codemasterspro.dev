'use client'

import { motion } from 'framer-motion'
import { MessageCircle, BookOpen, Lightbulb, Code, Star, Users, Zap, Instagram, Youtube, Sparkles, Target, Heart, Award, Rocket, Brain, Coffee, Bot, CreditCard, Calendar, Trophy, ArrowRight } from 'lucide-react'
import Image from 'next/image'

interface KodebekSectionProps {
  language: 'ru' | 'kk'
}

const translations = {
  ru: {
    title: '–ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ö–æ–¥–±–µ–∫–æ–º',
    subtitle: '–í–∞—à –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
    description: '–ü—Ä–∏–≤–µ—Ç! –Ø –ö–æ–¥–±–µ–∫ ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π IT-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —à–∫–æ–ª—ã CodeMastersPRO! üöÄ –Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–º–æ–≥–∞—é —Å—Ç—É–¥–µ–Ω—Ç–∞–º, —è —Å–æ–∑–¥–∞—é —Ü–µ–ª—É—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É –∑–Ω–∞–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö, –∫—Ç–æ –º–µ—á—Ç–∞–µ—Ç –ø–æ–∫–æ—Ä–∏—Ç—å –º–∏—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. –ê –µ—â–µ —É –º–µ–Ω—è –µ—Å—Ç—å –∫—Ä—É—Ç–æ–π Telegram –±–æ—Ç! ü§ñ',
    role: 'IT-–ù–∞—Å—Ç–∞–≤–Ω–∏–∫ & –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —à–∫–æ–ª—ã',
    features: [
      {
        icon: Brain,
        title: '–í–∞—à IT-–º–æ–∑–≥',
        description: '–ü–æ–º–æ–≥–∞—é —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏—è—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º'
      },
      {
        icon: Rocket,
        title: '–ó–∞–ø—É—Å–∫–∞—é –∫–∞—Ä—å–µ—Ä—ã',
        description: '–ù–∞–ø—Ä–∞–≤–ª—è—é —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –≤ IT-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏'
      },
      {
        icon: Coffee,
        title: '–î—Ä—É–∂–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã',
        description: '–î–µ–ª–∏–º—Å—è –∫–æ—Ñ–µ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏ –æ—Ç –æ–ø—ã—Ç–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞'
      },
      {
        icon: Zap,
        title: '–≠–Ω–µ—Ä–≥–∏—è –∑–Ω–∞–Ω–∏–π',
        description: '–ó–∞—Ä—è–∂–∞—é —ç–Ω—Ç—É–∑–∏–∞–∑–º–æ–º –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –Ω–∞ –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É'
      },
      {
        icon: Bot,
        title: 'Telegram –±–æ—Ç',
        description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏–µ–º, –ø–ª–∞—Ç–µ–∂–∞–º–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–≤–µ—Å—Ç–∞–º–∏'
      }
    ],
    social: {
      title: '–í–µ–¥–µ—Ç –∫—Ä—É—Ç—ã–µ —Ä—É–±—Ä–∏–∫–∏ –≤ Instagram',
      description: '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–ª–∏—Ç—Å—è –ø–æ–ª–µ–∑–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ IT',
      rubrics: [
        'üíª –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
        'üéØ IT-—Ñ–∞–∫—Ç—ã –∏ –Ω–æ–≤–æ—Å—Ç–∏',
        'üöÄ –°–æ–≤–µ—Ç—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
        'üìö –û–±–∑–æ—Ä—ã –∫—É—Ä—Å–æ–≤ –∏ –∫–Ω–∏–≥',
        'üí° –õ–∞–π—Ñ—Ö–∞–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞',
        'üåü –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞'
      ]
    },
    personality: {
      title: '–ü–æ—á–µ–º—É –ö–æ–¥–±–µ–∫ –æ—Å–æ–±–µ–Ω–Ω—ã–π?',
      traits: [
        '–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å',
        '–û–±—ä—è—Å–Ω—è–µ—Ç —Å–ª–æ–∂–Ω–æ–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏',
        '–ó–Ω–∞–µ—Ç –≤—Å–µ —Ç—Ä–µ–Ω–¥—ã –≤ IT-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏',
        '–í–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–π'
      ]
    },
    telegramBot: {
      title: 'ü§ñ Telegram –±–æ—Ç CodeMastersPRO',
      subtitle: '–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ',
      description: '–ú–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Å–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º –æ–±—É—á–µ–Ω–∏—è!',
      features: [
        {
          icon: CreditCard,
          title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏',
          description: '–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–æ–≤, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞, –∏—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π'
        },
        {
          icon: Calendar,
          title: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π',
          description: '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö, –ø–µ—Ä–µ–Ω–æ—Å—ã'
        },
        {
          icon: MessageCircle,
          title: '–û–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏',
          description: '–ë—ã—Å—Ç—Ä–∞—è —Å–≤—è–∑—å —Å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º–∏, –≤–æ–ø—Ä–æ—Å—ã –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'
        },
        {
          icon: BookOpen,
          title: '–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è',
          description: '–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ—à–µ–Ω–∏–π, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'
        },
        {
          icon: Trophy,
          title: '–ö–≤–µ—Å—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
          description: '–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—É—á–µ–Ω–∏—è, –±–æ–Ω—É—Å—ã, —Ä–µ–π—Ç–∏–Ω–≥–∏ –∏ –Ω–∞–≥—Ä–∞–¥—ã'
        },
        {
          icon: Users,
          title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
          description: '–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–º–æ—â—å –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        }
      ],
      cta: {
        title: '–ü–æ–¥–∫–ª—é—á–∏—Ç—å Telegram –±–æ—Ç–∞',
        subtitle: '–ù–∞—á–Ω–∏—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –æ–±—É—á–µ–Ω–∏–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!',
        button: 'ü§ñ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞'
      }
    }
  },
  kk: {
    title: '–ö–æ–¥–±–µ–∫–ø–µ–Ω —Ç–∞–Ω—ã—Å—ã“£—ã–∑',
    subtitle: '–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª–∞—É ”ô–ª–µ–º—ñ–Ω–¥–µ–≥—ñ —Å—ñ–∑–¥—ñ“£ –¥–æ—Å –∂–æ–ª –∫”©—Ä—Å–µ—Ç—É—à—ñ“£—ñ–∑',
    description: '–°”ô–ª–µ–º! –ú–µ–Ω –ö–æ–¥–±–µ–∫ ‚Äî —Å—ñ–∑–¥—ñ“£ –∂–µ–∫–µ IT-–∂–æ–ª –∫”©—Ä—Å–µ—Ç—É—à—ñ“£—ñ–∑ –∂”ô–Ω–µ CodeMastersPRO –º–µ–∫—Ç–µ–±—ñ–Ω—ñ“£ —Ä–µ—Å–º–∏ ”©–∫—ñ–ª—ñ! üöÄ –ú–µ–Ω —Ç–µ–∫ —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–ø–µ–π–º—ñ–Ω, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä ”ô–ª–µ–º—ñ–Ω –±–∞“ì—ã–Ω–¥—ã—Ä“ì—ã—Å—ã –∫–µ–ª–µ—Ç—ñ–Ω–¥–µ—Ä–≥–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω –±—ñ–ª—ñ–º —ç–∫–æ–∂“Ø–π–µ—Å—ñ–Ω –∂–∞—Å–∞–π–º—ã–Ω. –°–æ–Ω–¥–∞–π-–∞“õ –º–µ–Ω–¥–µ –∫–µ—Ä–µ–º–µ—Ç Telegram –±–æ—Ç –±–∞—Ä! ü§ñ',
    role: 'IT-–ñ–æ–ª –∫”©—Ä—Å–µ—Ç—É—à—ñ & –ú–µ–∫—Ç–µ–ø ”©–∫—ñ–ª—ñ',
    features: [
      {
        icon: Brain,
        title: '–°—ñ–∑–¥—ñ“£ IT-–º–∏—ã“£—ã–∑',
        description: '–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª–∞—É–¥—ã“£ –∫“Ø—Ä–¥–µ–ª—ñ —Ç“Ø—Å—ñ–Ω—ñ–∫—Ç–µ—Ä—ñ–Ω “õ–∞—Ä–∞–ø–∞–π—ã–º —Ç—ñ–ª–º–µ–Ω —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω'
      },
      {
        icon: Rocket,
        title: '–ú–∞–Ω—Å–∞–ø—Ç–∞—Ä–¥—ã —ñ—Å–∫–µ “õ–æ—Å–∞–º—ã–Ω',
        description: '–°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ IT-–∏–Ω–¥—É—Å—Ç—Ä–∏—è—Å—ã–Ω–¥–∞“ì—ã –¥“±—Ä—ã—Å –∂–æ–ª“ì–∞ –±–∞“ì—ã—Ç—Ç–∞–π–º—ã–Ω'
      },
      {
        icon: Coffee,
        title: '–î–æ—Å –∫–µ“£–µ—Å—Ç–µ—Ä—ñ',
        description: '–ö–æ—Ñ–µ –±”©–ª—ñ—Å—ñ–ø, —Ç”ô–∂—ñ—Ä–∏–±–µ–ª—ñ –±–∞“ì–¥–∞—Ä–ª–∞–º–∞—à—ã–¥–∞–Ω –ø—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ –∫–µ“£–µ—Å—Ç–µ—Ä –±–µ—Ä–µ–º—ñ–∑'
      },
      {
        icon: Zap,
        title: '–ë—ñ–ª—ñ–º —ç–Ω–µ—Ä–≥–∏—è—Å—ã',
        description: '–°”ô—Ç—Ç—ñ–ª—ñ–∫–∫–µ –∂–æ–ª–¥–∞“ì—ã —ç–Ω—Ç—É–∑–∏–∞–∑–º –º–µ–Ω –º–æ—Ç–∏–≤–∞—Ü–∏—è–º–µ–Ω –∑–∞—Ä—è–¥—Ç–∞–π–º—ã–Ω'
      },
      {
        icon: Bot,
        title: 'Telegram –±–æ—Ç',
        description: '–û“õ—É –±–∞—Å“õ–∞—Ä—É, —Ç”©–ª–µ–º–¥–µ—Ä, –∫–µ—Å—Ç–µ –∂”ô–Ω–µ –∫–≤–µ—Å—Ç—Ç–µ—Ä'
      }
    ],
    social: {
      title: 'Instagram-–¥–∞ –∫–µ—Ä–µ–º–µ—Ç —Ä—É–±—Ä–∏–∫–∞–ª–∞—Ä –∂“Ø—Ä–≥—ñ–∑–µ–¥—ñ',
      description: '–ö“Ø–Ω —Å–∞–π—ã–Ω –ø–∞–π–¥–∞–ª—ã –∫–æ–Ω—Ç–µ–Ω—Ç–ø–µ–Ω –±”©–ª—ñ—Å—ñ–ø, IT-–¥—ñ –æ“õ—É“ì–∞ —à–∞–±—ã—Ç—Ç–∞–Ω–¥—ã—Ä–∞–¥—ã',
      rubrics: [
        'üíª –ë–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª–∞—É —Ç—ñ–ª–¥–µ—Ä—ñ',
        'üéØ IT-—Ñ–∞–∫—Ç—ñ–ª–µ—Ä –∂”ô–Ω–µ –∂–∞“£–∞–ª—ã“õ—Ç–∞—Ä',
        'üöÄ –ñ–∞“£–∞–¥–∞–Ω –±–∞—Å—Ç–∞—É—à—ã–ª–∞—Ä“ì–∞ –∫–µ“£–µ—Å—Ç–µ—Ä',
        'üìö –ö—É—Ä—Å—Ç–∞—Ä –º–µ–Ω –∫—ñ—Ç–∞–ø—Ç–∞—Ä —à–æ–ª—É—ã',
        'üí° –ë–∞“ì–¥–∞—Ä–ª–∞–º–∞—à—ã–Ω—ã“£ –ª–∞–π—Ñ—Ö–∞–∫—Ç–∞—Ä—ã',
        'üåü –°”ô—Ç—Ç—ñ–ª—ñ–∫ —Ç–∞—Ä–∏—Ö—Ç–∞—Ä—ã'
      ]
    },
    personality: {
      title: '–ö–æ–¥–±–µ–∫ –Ω–µ–≥–µ –µ—Ä–µ–∫—à–µ?',
      traits: [
        '–î–æ—Å“õ–∞–Ω –∂”ô–Ω–µ ”ô—Ä“õ–∞—à–∞–Ω –∫”©–º–µ–∫—Ç–µ—Å—É–≥–µ –¥–∞–π—ã–Ω',
        '–ö“Ø—Ä–¥–µ–ª—ñ–Ω—ñ “õ–∞—Ä–∞–ø–∞–π—ã–º —Å”©–∑–¥–µ—Ä–º–µ–Ω —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä–µ–¥—ñ',
        'IT-–∏–Ω–¥—É—Å—Ç—Ä–∏—è—Å—ã–Ω–¥–∞“ì—ã –±–∞—Ä–ª—ã“õ —Ç—Ä–µ–Ω–¥—Ç–µ—Ä–¥—ñ –±—ñ–ª–µ–¥—ñ',
        '–ú–∞“õ—Å–∞—Ç—Ç–∞—Ä“ì–∞ –∂–µ—Ç—É–≥–µ —à–∞–±—ã—Ç—Ç–∞–Ω–¥—ã—Ä–∞–¥—ã'
      ]
    },
    telegramBot: {
      title: 'ü§ñ Telegram –±–æ—Ç CodeMastersPRO',
      subtitle: '–û“õ—É –±–∞—Ä–ª—ã“õ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫—Ç–µ—Ä—ñ –±—ñ—Ä –∂–µ—Ä–¥–µ',
      description: '–ú–µ–Ω—ñ“£ –∂–µ–∫–µ –∫”©–º–µ–∫—à—ñ–º –æ“õ—É –ø—Ä–æ—Ü–µ—Å—ñ–Ω –±–∞—Å“õ–∞—Ä—É“ì–∞ –∫”©–º–µ–∫—Ç–µ—Å–µ–¥—ñ!',
      features: [
        {
          icon: CreditCard,
          title: '–¢”©–ª–µ–º–¥–µ—Ä–¥—ñ –±–∞—Å“õ–∞—Ä—É',
          description: '–ö—É—Ä—Å—Ç–∞—Ä–¥—ã —Ç”©–ª–µ—É, –±–∞–ª–∞–Ω—Å—Ç—ã –±–∞“õ—ã–ª–∞—É, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–ª–∞—Ä —Ç–∞—Ä–∏—Ö—ã'
        },
        {
          icon: Calendar,
          title: '–°–∞–±–∞“õ –∫–µ—Å—Ç–µ—Å—ñ',
          description: '–ö–µ—Å—Ç–µ–Ω—ñ –∫”©—Ä—É, —Å–∞–±–∞“õ —Ç—É—Ä–∞–ª—ã —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä, –∞—É—ã—Å—Ç—ã—Ä—É–ª–∞—Ä'
        },
        {
          icon: MessageCircle,
          title: '–û“õ—ã—Ç—É—à—ã–ª–∞—Ä–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å',
          description: '–ñ–æ–ª –∫”©—Ä—Å–µ—Ç—É—à—ñ–ª–µ—Ä–º–µ–Ω –∂—ã–ª–¥–∞–º –±–∞–π–ª–∞–Ω—ã—Å, —Å“±—Ä–∞“õ—Ç–∞—Ä –∂”ô–Ω–µ –∫–µ“£–µ—Å—Ç–µ—Ä'
        },
        {
          icon: BookOpen,
          title: '“Æ–π —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä—ã',
          description: '–¢–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä–¥—ã –∞–ª—É, —à–µ—à—ñ–º–¥–µ—Ä–¥—ñ –∂—ñ–±–µ—Ä—É, –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—É'
        },
        {
          icon: Trophy,
          title: '–ö–≤–µ—Å—Ç—Ç–µ—Ä –∂”ô–Ω–µ –∂–µ—Ç—ñ—Å—Ç—ñ–∫—Ç–µ—Ä',
          description: '–û“õ—É–¥—ã –æ–π—ã–Ω–¥–∞—É, –±–æ–Ω—É—Å—Ç–∞—Ä, —Ä–µ–π—Ç–∏–Ω–≥—Ç–µ—Ä –∂”ô–Ω–µ –º–∞—Ä–∞–ø–∞—Ç—Ç–∞—Ä'
        },
        {
          icon: Users,
          title: '“ö–æ–ª–¥–∞—É 24/7',
          description: '–¢“±—Ç–∞—Å —Ç”ô—É–ª—ñ–∫ –∫”©–º–µ–∫ –∂”ô–Ω–µ —Ç–µ—Ö–Ω–∏–∫–∞–ª—ã“õ “õ–æ–ª–¥–∞—É'
        }
      ],
      cta: {
        title: 'Telegram –±–æ—Ç—ã–Ω “õ–æ—Å—É',
        subtitle: '“ö–∞–∑—ñ—Ä –æ“õ—É–¥—ã –±–∞—Å“õ–∞—Ä—É–¥—ã –±–∞—Å—Ç–∞“£—ã–∑!',
        button: 'ü§ñ –ë–æ—Ç—Ç—ã “õ–æ—Å—É'
      }
    }
  }
}

export default function KodebekSection({ language }: KodebekSectionProps) {
  const t = translations[language]

  return (
    <section id="kodebek" className="relative py-16 sm:py-20 overflow-hidden">
      {/* Modern Background Elements */}
      <div className="absolute inset-0 bg-gradient-to-br from-indigo-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900" />
      
      {/* Simplified Background Shapes */}
      <div className="absolute inset-0">
        <motion.div
          animate={{
            scale: [1, 1.1, 1],
            opacity: [0.2, 0.4, 0.2]
          }}
          transition={{
            duration: 15,
            repeat: Infinity,
            ease: "easeInOut"
          }}
          className="absolute top-10 right-10 w-64 h-64 bg-gradient-to-r from-blue-400/20 to-purple-400/20 rounded-full blur-3xl"
        />
        <motion.div
          animate={{
            scale: [1.1, 1, 1.1],
            opacity: [0.3, 0.5, 0.3]
          }}
          transition={{
            duration: 18,
            repeat: Infinity,
            ease: "easeInOut"
          }}
          className="absolute bottom-10 left-10 w-80 h-80 bg-gradient-to-r from-pink-400/20 to-indigo-400/20 rounded-full blur-3xl"
        />
      </div>

      <div className="container-custom relative z-10">
        {/* Compact Header Section */}
        <div className="text-center mb-8 sm:mb-12">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="mb-4"
          >
            <div className="inline-flex items-center space-x-2 bg-gradient-to-r from-indigo-500/10 to-purple-500/10 border border-indigo-500/20 rounded-full px-4 py-2 text-indigo-600 dark:text-indigo-400 text-sm font-medium backdrop-blur-sm">
              <Sparkles className="w-4 h-4" />
              <span>{t.role}</span>
            </div>
          </motion.div>

          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.1 }}
            viewport={{ once: true }}
            className="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-3"
          >
            {t.title}
          </motion.h2>

          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
            className="text-lg sm:text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed"
          >
            {t.subtitle}
          </motion.p>

          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.3 }}
            viewport={{ once: true }}
            className="text-base text-gray-500 dark:text-gray-400 max-w-2xl mx-auto mt-3 leading-relaxed"
          >
            {t.description}
          </motion.p>
        </div>

        <div className="grid lg:grid-cols-2 gap-8 sm:gap-12 items-center">
          {/* Left Side - Kodebek Image */}
          <motion.div
            initial={{ opacity: 0, x: -50 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="relative"
          >
            {/* Kodebek Image with Enhanced Animation */}
            <div className="relative">
              <motion.div
                animate={{ 
                  y: [0, -15, 0],
                  rotate: [0, 2, 0]
                }}
                transition={{ 
                  duration: 8, 
                  repeat: Infinity, 
                  ease: "easeInOut" 
                }}
                className="relative z-10"
              >
                <Image
                  src="/images/Kodebek1.png"
                  alt="–ö–æ–¥–±–µ–∫"
                  width={400}
                  height={480}
                  className="w-full max-w-md mx-auto object-contain"
                  style={{
                    filter: 'drop-shadow(0 20px 40px rgba(0, 0, 0, 0.1))'
                  }}
                />
              </motion.div>

              {/* Simplified Floating Elements */}
              {[...Array(4)].map((_, i) => (
                <motion.div
                  key={i}
                  className="absolute w-3 h-3 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full opacity-60"
                  style={{
                    top: `${25 + (i * 15)}%`,
                    left: `${20 + (i * 20)}%`,
                  }}
                  animate={{
                    scale: [1, 1.2, 1],
                    opacity: [0.4, 0.8, 0.4],
                    y: [0, -20, 0],
                    x: [0, Math.random() * 10 - 5, 0]
                  }}
                  transition={{
                    duration: 4,
                    repeat: Infinity,
                    delay: i * 0.5,
                    ease: "easeInOut"
                  }}
                />
              ))}

            </div>
          </motion.div>

          {/* Right Side - Features and Social */}
          <motion.div
            initial={{ opacity: 0, x: 50 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="space-y-6"
          >
                         {/* Features */}
             <div>
                               <h3 className="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white mb-4 sm:mb-6 text-center sm:text-left">
                  {language === 'ru' ? '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ö–æ–¥–±–µ–∫–∞ –æ—Å–æ–±–µ–Ω–Ω—ã–º?' : '–ö–æ–¥–±–µ–∫–∞ –Ω–µ –µ—Ä–µ–∫—à–µ –µ—Ç–µ—Ç—ñ–Ω?'}
                </h3>
                                                           <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 text-center sm:text-left">
                {t.features.map((feature, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: 0.2 + index * 0.1 }}
                    viewport={{ once: true }}
                                         className="group p-3 sm:p-4 bg-white/60 dark:bg-gray-800/60 backdrop-blur-sm rounded-lg border border-gray-200/50 dark:border-gray-700/50 hover:bg-white/80 dark:hover:bg-gray-800/80 transition-all duration-300 hover:shadow-md"
                   >
                                           <div className="w-8 h-8 sm:w-10 sm:h-10 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-lg flex items-center justify-center mb-2 sm:mb-3 group-hover:scale-110 transition-transform duration-300 mx-auto sm:mx-0">
                       <feature.icon className="w-4 h-4 sm:w-5 sm:h-5 text-white" />
                     </div>
                                           <h4 className="font-semibold text-gray-900 dark:text-white mb-1 sm:mb-2 text-sm sm:text-base text-center sm:text-left">{feature.title}</h4>
                                           <p className="text-xs sm:text-sm text-gray-600 dark:text-gray-400 leading-relaxed text-center sm:text-left">{feature.description}</p>
                  </motion.div>
                ))}
              </div>
            </div>

                         {/* Social Media Section */}
             <motion.div
               initial={{ opacity: 0, y: 20 }}
               whileInView={{ opacity: 1, y: 0 }}
               transition={{ duration: 0.6, delay: 0.6 }}
               viewport={{ once: true }}
               className="p-6 sm:p-8 bg-gradient-to-r from-indigo-500/10 to-purple-500/10 border border-indigo-500/20 rounded-2xl sm:rounded-3xl backdrop-blur-sm"
             >
                             <div className="flex items-center space-x-3 sm:space-x-4 mb-4 sm:mb-6">
                 <div className="w-10 h-10 sm:w-12 sm:h-12 bg-gradient-to-r from-pink-500 to-purple-500 rounded-xl flex items-center justify-center flex-shrink-0">
                   <Instagram className="w-5 h-5 sm:w-6 sm:h-6 text-white" />
                 </div>
                 <div>
                   <h4 className="font-semibold text-gray-900 dark:text-white text-base sm:text-lg">{t.social.title}</h4>
                   <p className="text-sm sm:text-base text-gray-600 dark:text-gray-400">{t.social.description}</p>
                 </div>
               </div>

                             <div className="grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-3 mb-4 sm:mb-6">
                 {t.social.rubrics.map((rubric, index) => (
                   <motion.div
                     key={index}
                     initial={{ opacity: 0, scale: 0.8 }}
                     whileInView={{ opacity: 1, scale: 1 }}
                     transition={{ duration: 0.4, delay: 0.7 + index * 0.05 }}
                     viewport={{ once: true }}
                     className="flex items-center space-x-2 p-2 sm:p-3 bg-white/60 dark:bg-gray-800/60 rounded-lg sm:rounded-xl text-xs sm:text-sm hover:bg-white/80 dark:hover:bg-gray-800/80 transition-all duration-300"
                   >
                     <span className="text-base sm:text-lg">{rubric.split(' ')[0]}</span>
                     <span className="text-gray-700 dark:text-gray-300">{rubric.split(' ').slice(1).join(' ')}</span>
                   </motion.div>
                 ))}
               </div>

                             {/* CTA Button */}
               <motion.button
                 whileHover={{ scale: 1.05 }}
                 whileTap={{ scale: 0.95 }}
                 onClick={() => window.open('https://www.instagram.com/code_masterspro?igsh=M2NxcW4zc2Jhd3l5&utm_source=qr', '_blank')}
                 className="w-full inline-flex items-center justify-center space-x-2 sm:space-x-3 bg-gradient-to-r from-pink-500 to-purple-500 text-white px-6 sm:px-8 py-3 sm:py-4 rounded-lg sm:rounded-xl font-medium hover:from-pink-600 hover:to-purple-600 transition-all duration-300 shadow-lg hover:shadow-xl text-sm sm:text-base"
               >
                 <Instagram className="w-4 h-4 sm:w-5 sm:h-5 flex-shrink-0" />
                 <span>{language === 'ru' ? '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Instagram' : 'Instagram-“ì–∞ –∂–∞–∑—ã–ª—É'}</span>
               </motion.button>
            </motion.div>

            {/* Mobile Personality Traits */}
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              whileInView={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.8, delay: 0.5 }}
              viewport={{ once: true }}
              className="lg:hidden bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-2xl p-4 sm:p-6 shadow-xl border border-gray-200/50 dark:border-gray-700/50"
            >
              <h4 className="font-semibold text-gray-900 dark:text-white mb-3 text-sm sm:text-base">
                {t.personality.title}
              </h4>
              <ul className="space-y-2">
                {t.personality.traits.map((trait, index) => (
                  <motion.li
                    key={index}
                    initial={{ opacity: 0, x: -10 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.4, delay: 0.6 + index * 0.1 }}
                    viewport={{ once: true }}
                    className="flex items-center space-x-2 text-xs sm:text-sm text-gray-600 dark:text-gray-300"
                  >
                    <div className="w-1.5 h-1.5 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full flex-shrink-0" />
                    <span>{trait}</span>
                  </motion.li>
                ))}
              </ul>
            </motion.div>
          </motion.div>
        </div>

        {/* Telegram Bot Section */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.3 }}
          viewport={{ once: true }}
          className="mt-8 sm:mt-12"
        >
          <div className="bg-gradient-to-br from-blue-50 via-purple-50 to-indigo-50 dark:from-blue-900/20 dark:via-purple-900/20 dark:to-indigo-900/20 rounded-2xl p-4 sm:p-6 border border-blue-200/50 dark:border-blue-700/50">
            {/* Header */}
            <div className="text-center mb-6 sm:mb-8">
              <motion.div
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
                className="inline-flex items-center justify-center w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl mb-3 sm:mb-4 shadow-lg"
              >
                <motion.div
                  animate={{ rotate: [0, 360] }}
                  transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                >
                  <Bot className="w-6 h-6 sm:w-8 sm:h-8 text-white" />
                </motion.div>
              </motion.div>
              
              <h3 className="text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 dark:text-white mb-2 sm:mb-3">
                {t.telegramBot.title}
              </h3>
              <p className="text-base sm:text-lg text-blue-600 dark:text-blue-400 font-medium mb-2">
                {t.telegramBot.subtitle}
              </p>
              <p className="text-sm text-gray-600 dark:text-gray-300 max-w-xl mx-auto">
                {t.telegramBot.description}
              </p>
            </div>

            {/* Features Grid */}
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4 mb-6 sm:mb-8">
              {t.telegramBot.features.map((feature, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1, duration: 0.5 }}
                  viewport={{ once: true }}
                  className="bg-white/60 dark:bg-gray-800/60 backdrop-blur-sm rounded-lg p-3 sm:p-4 border border-white/50 dark:border-gray-700/50 hover:shadow-md transition-all duration-300"
                >
                  <div className="flex items-start space-x-3 sm:space-x-4">
                    <div className="w-8 h-8 sm:w-10 sm:h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center flex-shrink-0">
                      <feature.icon className="w-4 h-4 sm:w-5 sm:h-5 text-white" />
                    </div>
                    <div className="flex-1">
                      <h4 className="font-semibold text-gray-900 dark:text-white text-xs sm:text-sm mb-1">
                        {feature.title}
                      </h4>
                      <p className="text-xs text-gray-600 dark:text-gray-300 leading-relaxed">
                        {feature.description}
                      </p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>

            {/* CTA Section */}
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              whileInView={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.6, delay: 0.4 }}
              viewport={{ once: true }}
              className="text-center"
            >
              <div className="bg-gradient-to-r from-blue-500 via-purple-500 to-indigo-600 rounded-xl p-4 sm:p-6 text-white">
                <h4 className="text-lg sm:text-xl font-bold mb-2">
                  {t.telegramBot.cta.title}
                </h4>
                <p className="text-blue-100 mb-4 sm:mb-6 text-sm">
                  {t.telegramBot.cta.subtitle}
                </p>
                
                <motion.button
                  whileHover={{ scale: 1.05, y: -2 }}
                  whileTap={{ scale: 0.95 }}
                  className="bg-white text-blue-600 font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 flex items-center space-x-2 mx-auto group"
                  onClick={() => {
                    const message = language === 'ru' 
                      ? '–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å Telegram –±–æ—Ç–∞ CodeMastersPRO –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏–µ–º. –ú–æ–∂–µ—Ç–µ –ø–æ–º–æ—á—å?'
                      : '–°”ô–ª–µ–º! CodeMastersPRO Telegram –±–æ—Ç—ã–Ω –æ“õ—É –±–∞—Å“õ–∞—Ä—É “Ø—à—ñ–Ω “õ–æ—Å“õ—ã–º –∫–µ–ª–µ–¥—ñ. –ö”©–º–µ–∫—Ç–µ—Å–µ –∞–ª–∞—Å—ã–∑ –±–∞?';
                    const encodedMessage = encodeURIComponent(message);
                    window.open(`https://t.me/CodeMastersPRO_bot?start=${encodedMessage}`, '_blank');
                  }}
                >
                  <motion.div
                    animate={{ rotate: [0, 360] }}
                    transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                  >
                    <svg className="w-4 h-4 sm:w-5 sm:h-5" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
                    </svg>
                  </motion.div>
                  <span className="text-sm">{t.telegramBot.cta.button}</span>
                  <ArrowRight className="w-3 h-3 sm:w-4 sm:h-4 group-hover:translate-x-1 transition-transform duration-300" />
                </motion.button>
              </div>
            </motion.div>
          </div>
        </motion.div>
      </div>
    </section>
  )
}
